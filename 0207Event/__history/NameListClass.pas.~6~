unit NameListClass;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms;

type
  PNameInfo = ^TNameInfo;
  TNameInfo = record
    iName : String;
    iAge : Integer;
  end;

  TOnChange = procedure(Sender : TObject; aInfo : PNameInfo; aIsAdd : Boolean) of object;

  TNameList = class(TList)
  private
    fOnChange : TOnChange;
  protected
    function Get(Index : Integer) : PNameInfo;
    procedure Put(Index : Integer; Item : PNameInfo);
  public
    destructor Destroy; override;

    function Add(const aName : String) : PNameInfo;
    procedure Clear; override;
    procedure Delete(Index : Integer); overload;
    procedure Delete(const aName : String); overload;
    function IndexOf(const aName : String) : PNameInfo;

    property OnChange : TOnChange read fOnChange write fOnChange;
  end;

implementation

{ TNameList }
function TNameList.Get(Index : Integer) : PNameInfo;
procedure TNameList.Put(Index : Integer; Item : PNameInfo);
destructor TNameList.Destroy; override;

function TNameList.Add(const aName : String) : PNameInfo;
procedure TNameList.Clear; override;
procedure TNameList.Delete(Index : Integer); overload;
procedure TNameList.Delete(const aName : String); overload;
function TNameList.IndexOf(const aName : String) : PNameInfo;

end.
